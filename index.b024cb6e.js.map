{"mappings":"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","sources":["<anon>","assets/js/main.js"],"sourcesContent":["/*=============== CHANGE BACKGROUND HEADER ===============*/ function scrollHeader() {\n    const header = document.getElementById(\"header\");\n    // When the scroll is greater than 50 viewport height, add the scroll-header class to the header tag\n    if (this.scrollY >= 50) header.classList.add(\"scroll-header\");\n    else header.classList.remove(\"scroll-header\");\n}\nwindow.addEventListener(\"scroll\", scrollHeader);\n/*=============== SERVICES MODAL ===============*/ const modalViews = document.querySelectorAll(\".services__modal\"), modalBtns = document.querySelectorAll(\".services__button\"), modalClose = document.querySelectorAll(\".services__modal-close\");\nlet modal = function(modalClick) {\n    modalViews[modalClick].classList.add(\"active-modal\");\n};\nmodalBtns.forEach((mb, i)=>{\n    mb.addEventListener(\"click\", ()=>{\n        modal(i);\n    });\n});\nmodalClose.forEach((mc)=>{\n    mc.addEventListener(\"click\", ()=>{\n        modalViews.forEach((mv)=>{\n            mv.classList.remove(\"active-modal\");\n        });\n    });\n});\n/*=============== MIXITUP FILTER PORTFOLIO ===============*/ let mixerPortfolio = mixitup(\".work__container\", {\n    selectors: {\n        target: \".work__card\"\n    },\n    animation: {\n        duration: 300\n    }\n});\n/* Link active work */ const linkWork = document.querySelectorAll(\".work__item\");\nfunction activeWork() {\n    linkWork.forEach((l)=>l.classList.remove(\"active-work\"));\n    this.classList.add(\"active-work\");\n}\nlinkWork.forEach((l)=>l.addEventListener(\"click\", activeWork));\n/*=============== SWIPER TESTIMONIAL ===============*/ let swiperTestimonial = new Swiper(\".testimonial__container\", {\n    spaceBetween: 24,\n    loop: true,\n    grabCursor: true,\n    pagination: {\n        el: \".swiper-pagination\",\n        clickable: true\n    },\n    breakpoints: {\n        576: {\n            slidesPerView: 2\n        },\n        768: {\n            slidesPerView: 2,\n            spaceBetween: 48\n        }\n    }\n});\n/*=============== SCROLL SECTIONS ACTIVE LINK ===============*/ const sections = document.querySelectorAll(\"section[id]\");\nconst scrollActive = ()=>{\n    const scrollY = window.pageYOffset;\n    sections.forEach((current)=>{\n        const sectionHeight = current.offsetHeight, sectionTop = current.offsetTop - 58, sectionId = current.getAttribute(\"id\"), sectionsClass = document.querySelector(\".nav__menu a[href*=\" + sectionId + \"]\");\n        if (scrollY > sectionTop && scrollY <= sectionTop + sectionHeight) sectionsClass.classList.add(\"active-link\");\n        else sectionsClass.classList.remove(\"active-link\");\n    });\n};\nwindow.addEventListener(\"scroll\", scrollActive);\n/*=============== LIGHT DARK THEME ===============*/ const themeButton = document.getElementById(\"theme-button\");\nconst lightTheme = \"light-theme\";\nconst iconTheme = \"bx-sun\";\n// Previously selected topic (if user selected)\nconst selectedTheme = localStorage.getItem(\"selected-theme\");\nconst selectedIcon = localStorage.getItem(\"selected-icon\");\n// We obtain the current theme that the interface has by validating the light-theme class\nconst getCurrentTheme = ()=>document.body.classList.contains(lightTheme) ? \"dark\" : \"light\";\nconst getCurrentIcon = ()=>themeButton.classList.contains(iconTheme) ? \"bx bx-moon\" : \"bx bx-sun\";\n// We validate if the user previously chose a topic\nif (selectedTheme) {\n    // If the validation is fulfilled, we ask what the issue was to know if we activated or deactivated the dark\n    document.body.classList[selectedTheme === \"dark\" ? \"add\" : \"remove\"](lightTheme);\n    themeButton.classList[selectedIcon === \"bx bx-moon\" ? \"add\" : \"remove\"](iconTheme);\n}\n// Activate / deactivate the theme manually with the button\nthemeButton.addEventListener(\"click\", ()=>{\n    // Add or remove the dark / icon theme\n    document.body.classList.toggle(lightTheme);\n    themeButton.classList.toggle(iconTheme);\n    // We save the theme and the current icon that the user chose\n    localStorage.setItem(\"selected-theme\", getCurrentTheme());\n    localStorage.setItem(\"selected-icon\", getCurrentIcon());\n});\n/*=============== SCROLL REVEAL ANIMATION ===============*/ const sr = ScrollReveal({\n    origin: \"top\",\n    distance: \"60px\",\n    duration: 2500,\n    deplay: 400\n});\nsr.reveal(`.home__data`);\nsr.reveal(`.home__handle`, {\n    deplay: 700\n});\nsr.reveal(`.home__social, .home__scroll`, {\n    deplay: 900,\n    origin: \"bottom\"\n});\nsr.reveal(``);\n/*=============== JSON ===============*/ fetch(\"assets/data/skills.json\").then((response)=>response.json()).then((data)=>{\n    const divideArray = (arr)=>{\n        const mid = Math.ceil(arr.length / 2);\n        return [\n            arr.slice(0, mid),\n            arr.slice(mid)\n        ];\n    };\n    const createSkillsContent = (title, skills)=>{\n        const contentDiv = document.createElement(\"div\");\n        contentDiv.classList.add(\"skills__content\");\n        const titleElement = document.createElement(\"h3\");\n        titleElement.classList.add(\"skills__title\");\n        titleElement.textContent = title;\n        contentDiv.appendChild(titleElement);\n        const boxDiv = document.createElement(\"div\");\n        boxDiv.classList.add(\"skills__box\");\n        const [group1Skills, group2Skills] = divideArray(skills);\n        const group1Div = document.createElement(\"div\");\n        group1Div.classList.add(\"skills_group\");\n        group1Skills.forEach((skill)=>{\n            const dataDiv = document.createElement(\"div\");\n            dataDiv.classList.add(\"skills__data\");\n            const iconElement = document.createElement(\"i\");\n            iconElement.classList.add(\"bx\", \"bxs-badge-check\");\n            const nameDiv = document.createElement(\"div\");\n            const nameElement = document.createElement(\"h3\");\n            nameElement.classList.add(\"skills__name\");\n            nameElement.textContent = skill;\n            nameDiv.appendChild(nameElement);\n            dataDiv.appendChild(iconElement);\n            dataDiv.appendChild(nameDiv);\n            group1Div.appendChild(dataDiv);\n        });\n        const group2Div = document.createElement(\"div\");\n        group2Div.classList.add(\"skills_group\");\n        group2Skills.forEach((skill)=>{\n            const dataDiv = document.createElement(\"div\");\n            dataDiv.classList.add(\"skills__data\");\n            const iconElement = document.createElement(\"i\");\n            iconElement.classList.add(\"bx\", \"bxs-badge-check\");\n            const nameDiv = document.createElement(\"div\");\n            const nameElement = document.createElement(\"h3\");\n            nameElement.classList.add(\"skills__name\");\n            nameElement.textContent = skill;\n            nameDiv.appendChild(nameElement);\n            dataDiv.appendChild(iconElement);\n            dataDiv.appendChild(nameDiv);\n            group2Div.appendChild(dataDiv);\n        });\n        boxDiv.appendChild(group1Div);\n        boxDiv.appendChild(group2Div);\n        contentDiv.appendChild(boxDiv);\n        return contentDiv;\n    };\n    const skillsContainer = document.querySelector(\".skills__container\");\n    skillsContainer.appendChild(createSkillsContent(\"Backend\", data.backend));\n    skillsContainer.appendChild(createSkillsContent(\"Frontend\", data.frontend));\n    skillsContainer.appendChild(createSkillsContent(\"Mobile\", data.mobile));\n    skillsContainer.appendChild(createSkillsContent(\"Tools\", data.tools));\n}).catch((error)=>{\n    console.error(\"Error fetching or parsing skills data:\", error);\n});\nfetch(\"assets/data/projects.json\").then((response)=>response.json()).then((data)=>{\n    const projects = data.projects;\n    const workContainer = document.querySelector(\".work__container\");\n    projects.forEach((project)=>{\n        const card = document.createElement(\"div\");\n        card.classList.add(\"work__card\", \"mix\", project.category);\n        const image = document.createElement(\"img\");\n        if (project.image !== \"\") {\n            image.src = project.image;\n            image.alt = `Screenshot of ${project.title} app`;\n            image.classList.add(\"work__img\");\n            card.appendChild(image);\n        }\n        const title = document.createElement(\"h3\");\n        title.textContent = project.title;\n        title.classList.add(\"work__title\");\n        card.appendChild(title);\n        const techList = document.createElement(\"ul\");\n        project.technologies.forEach((tech)=>{\n            const listItem = document.createElement(\"li\");\n            listItem.textContent = tech;\n            techList.appendChild(listItem);\n        });\n        card.appendChild(techList);\n        workContainer.appendChild(card);\n    });\n}).catch((error)=>{\n    console.error(\"Error fetching or parsing projects data:\", error);\n});\nfetch(\"assets/data/certifications.json\").then((response)=>response.json()).then((data)=>{\n    const swiperWrapper = document.querySelector(\".swiper-wrapper\");\n    data.forEach((certification)=>{\n        const cardDiv = document.createElement(\"div\");\n        cardDiv.classList.add(\"testimonial__card\");\n        cardDiv.classList.add(\"swiper-slide\");\n        const link = document.createElement(\"a\");\n        link.href = certification.courseUrl;\n        link.target = \"_blank\";\n        const img = document.createElement(\"img\");\n        img.src = certification.imageUrl;\n        img.classList.add(\"testimonial__img\");\n        const name = document.createElement(\"h3\");\n        name.classList.add(\"testimonial__name\");\n        name.textContent = certification.courseName;\n        link.appendChild(img);\n        cardDiv.appendChild(link);\n        cardDiv.appendChild(name);\n        swiperWrapper.appendChild(cardDiv);\n    });\n}).catch((error)=>{\n    console.error(\"Error fetching or parsing data:\", error);\n});\n\n//# sourceMappingURL=index.b024cb6e.js.map\n","/*=============== CHANGE BACKGROUND HEADER ===============*/\r\nfunction scrollHeader() {\r\n    const header = document.getElementById('header');\r\n    // When the scroll is greater than 50 viewport height, add the scroll-header class to the header tag\r\n    if (this.scrollY >= 50) header.classList.add('scroll-header');\r\n    else header.classList.remove('scroll-header');\r\n}\r\n\r\nwindow.addEventListener('scroll', scrollHeader);\r\n\r\n/*=============== SERVICES MODAL ===============*/\r\nconst modalViews = document.querySelectorAll('.services__modal'),\r\n    modalBtns = document.querySelectorAll('.services__button'),\r\n    modalClose = document.querySelectorAll('.services__modal-close');\r\n\r\nlet modal = function (modalClick) {\r\n    modalViews[modalClick].classList.add('active-modal');\r\n};\r\n\r\nmodalBtns.forEach((mb, i) => {\r\n    mb.addEventListener('click', () => {\r\n        modal(i);\r\n    });\r\n});\r\n\r\nmodalClose.forEach(mc => {\r\n    mc.addEventListener('click', () => {\r\n        modalViews.forEach(mv => {\r\n            mv.classList.remove('active-modal');\r\n        });\r\n    });\r\n});\r\n\r\n/*=============== MIXITUP FILTER PORTFOLIO ===============*/\r\nlet mixerPortfolio = mixitup('.work__container', {\r\n    selectors: {\r\n        target: '.work__card'\r\n    },\r\n    animation: {\r\n        duration: 300\r\n    }\r\n});\r\n\r\n/* Link active work */\r\nconst linkWork = document.querySelectorAll('.work__item');\r\n\r\nfunction activeWork() {\r\n    linkWork.forEach(l => l.classList.remove('active-work'));\r\n    this.classList.add('active-work');\r\n}\r\n\r\nlinkWork.forEach(l => l.addEventListener('click', activeWork));\r\n\r\n/*=============== SWIPER TESTIMONIAL ===============*/\r\nlet swiperTestimonial = new Swiper('.testimonial__container', {\r\n    spaceBetween: 24,\r\n    loop: true,\r\n    grabCursor: true,\r\n\r\n    pagination: {\r\n        el: '.swiper-pagination',\r\n        clickable: true\r\n    },\r\n    breakpoints: {\r\n        576: {\r\n            slidesPerView: 2\r\n        },\r\n        768: {\r\n            slidesPerView: 2,\r\n            spaceBetween: 48\r\n        }\r\n    }\r\n});\r\n\r\n/*=============== SCROLL SECTIONS ACTIVE LINK ===============*/\r\nconst sections = document.querySelectorAll('section[id]');\r\n\r\nconst scrollActive = () => {\r\n    const scrollY = window.pageYOffset;\r\n\r\n    sections.forEach(current => {\r\n        const sectionHeight = current.offsetHeight,\r\n            sectionTop = current.offsetTop - 58,\r\n            sectionId = current.getAttribute('id'),\r\n            sectionsClass = document.querySelector('.nav__menu a[href*=' + sectionId + ']');\r\n\r\n        if (scrollY > sectionTop && scrollY <= sectionTop + sectionHeight) {\r\n            sectionsClass.classList.add('active-link');\r\n        } else {\r\n            sectionsClass.classList.remove('active-link');\r\n        }\r\n    });\r\n};\r\nwindow.addEventListener('scroll', scrollActive);\r\n\r\n/*=============== LIGHT DARK THEME ===============*/\r\nconst themeButton = document.getElementById('theme-button');\r\nconst lightTheme = 'light-theme';\r\nconst iconTheme = 'bx-sun';\r\n\r\n// Previously selected topic (if user selected)\r\nconst selectedTheme = localStorage.getItem('selected-theme');\r\nconst selectedIcon = localStorage.getItem('selected-icon');\r\n\r\n// We obtain the current theme that the interface has by validating the light-theme class\r\nconst getCurrentTheme = () => (document.body.classList.contains(lightTheme) ? 'dark' : 'light');\r\nconst getCurrentIcon = () =>\r\n    themeButton.classList.contains(iconTheme) ? 'bx bx-moon' : 'bx bx-sun';\r\n\r\n// We validate if the user previously chose a topic\r\nif (selectedTheme) {\r\n    // If the validation is fulfilled, we ask what the issue was to know if we activated or deactivated the dark\r\n    document.body.classList[selectedTheme === 'dark' ? 'add' : 'remove'](lightTheme);\r\n    themeButton.classList[selectedIcon === 'bx bx-moon' ? 'add' : 'remove'](iconTheme);\r\n}\r\n\r\n// Activate / deactivate the theme manually with the button\r\nthemeButton.addEventListener('click', () => {\r\n    // Add or remove the dark / icon theme\r\n    document.body.classList.toggle(lightTheme);\r\n    themeButton.classList.toggle(iconTheme);\r\n    // We save the theme and the current icon that the user chose\r\n    localStorage.setItem('selected-theme', getCurrentTheme());\r\n    localStorage.setItem('selected-icon', getCurrentIcon());\r\n});\r\n\r\n/*=============== SCROLL REVEAL ANIMATION ===============*/\r\nconst sr = ScrollReveal({\r\n    origin: 'top',\r\n    distance: '60px',\r\n    duration: 2500,\r\n    deplay: 400\r\n    // reset: true\r\n});\r\n\r\nsr.reveal(`.home__data`);\r\nsr.reveal(`.home__handle`, {deplay: 700});\r\nsr.reveal(`.home__social, .home__scroll`, {deplay: 900, origin: 'bottom'});\r\nsr.reveal(``);\r\n\r\n\r\n/*=============== JSON ===============*/\r\nfetch('assets/data/skills.json')\r\n    .then(response => response.json())\r\n    .then(data => {\r\n        const divideArray = arr => {\r\n            const mid = Math.ceil(arr.length / 2);\r\n            return [arr.slice(0, mid), arr.slice(mid)];\r\n        };\r\n\r\n        const createSkillsContent = (title, skills) => {\r\n            const contentDiv = document.createElement('div');\r\n            contentDiv.classList.add('skills__content');\r\n\r\n            const titleElement = document.createElement('h3');\r\n            titleElement.classList.add('skills__title');\r\n            titleElement.textContent = title;\r\n            contentDiv.appendChild(titleElement);\r\n\r\n            const boxDiv = document.createElement('div');\r\n            boxDiv.classList.add('skills__box');\r\n\r\n            const [group1Skills, group2Skills] = divideArray(skills);\r\n\r\n            const group1Div = document.createElement('div');\r\n            group1Div.classList.add('skills_group');\r\n            group1Skills.forEach(skill => {\r\n                const dataDiv = document.createElement('div');\r\n                dataDiv.classList.add('skills__data');\r\n                const iconElement = document.createElement('i');\r\n                iconElement.classList.add('bx', 'bxs-badge-check');\r\n                const nameDiv = document.createElement('div');\r\n                const nameElement = document.createElement('h3');\r\n                nameElement.classList.add('skills__name');\r\n                nameElement.textContent = skill;\r\n\r\n                nameDiv.appendChild(nameElement);\r\n                dataDiv.appendChild(iconElement);\r\n                dataDiv.appendChild(nameDiv);\r\n                group1Div.appendChild(dataDiv);\r\n            });\r\n\r\n            const group2Div = document.createElement('div');\r\n            group2Div.classList.add('skills_group');\r\n            group2Skills.forEach(skill => {\r\n                const dataDiv = document.createElement('div');\r\n                dataDiv.classList.add('skills__data');\r\n                const iconElement = document.createElement('i');\r\n                iconElement.classList.add('bx', 'bxs-badge-check');\r\n                const nameDiv = document.createElement('div');\r\n                const nameElement = document.createElement('h3');\r\n                nameElement.classList.add('skills__name');\r\n                nameElement.textContent = skill;\r\n\r\n                nameDiv.appendChild(nameElement);\r\n                dataDiv.appendChild(iconElement);\r\n                dataDiv.appendChild(nameDiv);\r\n                group2Div.appendChild(dataDiv);\r\n            });\r\n\r\n            boxDiv.appendChild(group1Div);\r\n            boxDiv.appendChild(group2Div);\r\n            contentDiv.appendChild(boxDiv);\r\n            return contentDiv;\r\n        };\r\n\r\n        const skillsContainer = document.querySelector('.skills__container');\r\n\r\n        skillsContainer.appendChild(createSkillsContent('Backend', data.backend));\r\n        skillsContainer.appendChild(createSkillsContent('Frontend', data.frontend));\r\n        skillsContainer.appendChild(createSkillsContent('Mobile', data.mobile));\r\n        skillsContainer.appendChild(createSkillsContent('Tools', data.tools));\r\n    })\r\n    .catch(error => {\r\n        console.error('Error fetching or parsing skills data:', error);\r\n    });\r\n\r\n\r\nfetch('assets/data/projects.json')\r\n    .then(response => response.json())\r\n    .then(data => {\r\n        const projects = data.projects;\r\n        const workContainer = document.querySelector('.work__container');\r\n\r\n        projects.forEach(project => {\r\n            const card = document.createElement('div');\r\n            card.classList.add('work__card', 'mix', project.category);\r\n\r\n            const image = document.createElement('img');\r\n            if (project.image !== '') {\r\n                image.src = project.image;\r\n                image.alt = `Screenshot of ${project.title} app`;\r\n                image.classList.add('work__img');\r\n                card.appendChild(image);\r\n            }\r\n\r\n            const title = document.createElement('h3');\r\n            title.textContent = project.title;\r\n            title.classList.add('work__title');\r\n            card.appendChild(title);\r\n\r\n            const techList = document.createElement('ul');\r\n            project.technologies.forEach(tech => {\r\n                const listItem = document.createElement('li');\r\n                listItem.textContent = tech;\r\n                techList.appendChild(listItem);\r\n            });\r\n            card.appendChild(techList);\r\n\r\n            workContainer.appendChild(card);\r\n        });\r\n    })\r\n    .catch(error => {\r\n        console.error('Error fetching or parsing projects data:', error);\r\n    });\r\n\r\nfetch('assets/data/certifications.json')\r\n    .then(response => response.json())\r\n    .then(data => {\r\n        const swiperWrapper = document.querySelector('.swiper-wrapper');\r\n\r\n        data.forEach(certification => {\r\n            const cardDiv = document.createElement('div');\r\n            cardDiv.classList.add('testimonial__card');\r\n            cardDiv.classList.add('swiper-slide');\r\n\r\n            const link = document.createElement('a');\r\n            link.href = certification.courseUrl;\r\n            link.target = '_blank';\r\n\r\n            const img = document.createElement('img');\r\n            img.src = certification.imageUrl;\r\n            img.classList.add('testimonial__img');\r\n\r\n            const name = document.createElement('h3');\r\n            name.classList.add('testimonial__name');\r\n            name.textContent = certification.courseName;\r\n\r\n            link.appendChild(img);\r\n            cardDiv.appendChild(link);\r\n            cardDiv.appendChild(name);\r\n\r\n            swiperWrapper.appendChild(cardDiv);\r\n        });\r\n    })\r\n    .catch(error => {\r\n        console.error('Error fetching or parsing data:', error);\r\n    });\r\n"],"names":["window","addEventListener","header","document","getElementById","scrollY","classList","add","remove","modalViews","querySelectorAll","modalBtns","modalClose","modal","modalClick","forEach","mb","i","mc","mv","mixitup","selectors","target","animation","duration","linkWork","activeWork","l","Swiper","spaceBetween","loop","grabCursor","pagination","el","clickable","breakpoints","slidesPerView","sections","pageYOffset","current","sectionHeight","offsetHeight","sectionTop","offsetTop","sectionId","getAttribute","sectionsClass","querySelector","themeButton","lightTheme","iconTheme","selectedTheme","localStorage","getItem","selectedIcon","getCurrentTheme","body","contains","getCurrentIcon","toggle","setItem","sr","ScrollReveal","origin","distance","deplay","reveal","fetch","then","response","json","data","divideArray","arr","mid","Math","ceil","length","slice","createSkillsContent","title","skills","contentDiv","createElement","titleElement","textContent","appendChild","boxDiv","group1Skills","group2Skills","group1Div","skill","dataDiv","iconElement","nameDiv","nameElement","group2Div","skillsContainer","backend","frontend","mobile","tools","catch","error","console","projects","workContainer","project","card","category","image","src","alt","techList","technologies","tech","listItem","swiperWrapper","certification","cardDiv","link","href","courseUrl","img","imageUrl","name","courseName"],"version":3,"file":"index.b024cb6e.js.map"}